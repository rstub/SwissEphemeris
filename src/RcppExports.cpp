// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// day_of_week
Rcpp::IntegerVector day_of_week(Rcpp::NumericVector jd);
RcppExport SEXP _swephR_day_of_week(SEXP jdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type jd(jdSEXP);
    rcpp_result_gen = Rcpp::wrap(day_of_week(jd));
    return rcpp_result_gen;
END_RCPP
}
// get_tid_acc
double get_tid_acc();
RcppExport SEXP _swephR_get_tid_acc() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(get_tid_acc());
    return rcpp_result_gen;
END_RCPP
}
// version
std::string version();
RcppExport SEXP _swephR_version() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(version());
    return rcpp_result_gen;
END_RCPP
}
// set_tid_acc
void set_tid_acc(double t_acc);
RcppExport SEXP _swephR_set_tid_acc(SEXP t_accSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t_acc(t_accSEXP);
    set_tid_acc(t_acc);
    return R_NilValue;
END_RCPP
}
// deltat
double deltat(double tjd);
RcppExport SEXP _swephR_deltat(SEXP tjdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tjd(tjdSEXP);
    rcpp_result_gen = Rcpp::wrap(deltat(tjd));
    return rcpp_result_gen;
END_RCPP
}
// set_ephe_path
void set_ephe_path(std::string file);
RcppExport SEXP _swephR_set_ephe_path(SEXP fileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type file(fileSEXP);
    set_ephe_path(file);
    return R_NilValue;
END_RCPP
}
// set_topo
void set_topo(double geolon, double geolat, double altitude);
RcppExport SEXP _swephR_set_topo(SEXP geolonSEXP, SEXP geolatSEXP, SEXP altitudeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type geolon(geolonSEXP);
    Rcpp::traits::input_parameter< double >::type geolat(geolatSEXP);
    Rcpp::traits::input_parameter< double >::type altitude(altitudeSEXP);
    set_topo(geolon, geolat, altitude);
    return R_NilValue;
END_RCPP
}
// set_delta_t_userdef
void set_delta_t_userdef(double delta_t);
RcppExport SEXP _swephR_set_delta_t_userdef(SEXP delta_tSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type delta_t(delta_tSEXP);
    set_delta_t_userdef(delta_t);
    return R_NilValue;
END_RCPP
}
// calc
Rcpp::List calc(double tjd_et, int ipl, int iflag);
RcppExport SEXP _swephR_calc(SEXP tjd_etSEXP, SEXP iplSEXP, SEXP iflagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tjd_et(tjd_etSEXP);
    Rcpp::traits::input_parameter< int >::type ipl(iplSEXP);
    Rcpp::traits::input_parameter< int >::type iflag(iflagSEXP);
    rcpp_result_gen = Rcpp::wrap(calc(tjd_et, ipl, iflag));
    return rcpp_result_gen;
END_RCPP
}
// fixstar
Rcpp::List fixstar(std::string star, double tjd_et, int iflag);
RcppExport SEXP _swephR_fixstar(SEXP starSEXP, SEXP tjd_etSEXP, SEXP iflagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type star(starSEXP);
    Rcpp::traits::input_parameter< double >::type tjd_et(tjd_etSEXP);
    Rcpp::traits::input_parameter< int >::type iflag(iflagSEXP);
    rcpp_result_gen = Rcpp::wrap(fixstar(star, tjd_et, iflag));
    return rcpp_result_gen;
END_RCPP
}
// deltat_ex
Rcpp::List deltat_ex(double tjd, int ephe_flag);
RcppExport SEXP _swephR_deltat_ex(SEXP tjdSEXP, SEXP ephe_flagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tjd(tjdSEXP);
    Rcpp::traits::input_parameter< int >::type ephe_flag(ephe_flagSEXP);
    rcpp_result_gen = Rcpp::wrap(deltat_ex(tjd, ephe_flag));
    return rcpp_result_gen;
END_RCPP
}
// azalt
Rcpp::List azalt(double tjd_ut, int calc_flag, Rcpp::NumericVector geopos, double atpress, double attemp, Rcpp::NumericVector xin);
RcppExport SEXP _swephR_azalt(SEXP tjd_utSEXP, SEXP calc_flagSEXP, SEXP geoposSEXP, SEXP atpressSEXP, SEXP attempSEXP, SEXP xinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tjd_ut(tjd_utSEXP);
    Rcpp::traits::input_parameter< int >::type calc_flag(calc_flagSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type geopos(geoposSEXP);
    Rcpp::traits::input_parameter< double >::type atpress(atpressSEXP);
    Rcpp::traits::input_parameter< double >::type attemp(attempSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xin(xinSEXP);
    rcpp_result_gen = Rcpp::wrap(azalt(tjd_ut, calc_flag, geopos, atpress, attemp, xin));
    return rcpp_result_gen;
END_RCPP
}
// rise_trans_true_hor
Rcpp::List rise_trans_true_hor(double tjd_ut, int ipl, std::string starname, int epheflag, int rsmi, Rcpp::NumericVector geopos, double atpress, double attemp, double horhgt);
RcppExport SEXP _swephR_rise_trans_true_hor(SEXP tjd_utSEXP, SEXP iplSEXP, SEXP starnameSEXP, SEXP epheflagSEXP, SEXP rsmiSEXP, SEXP geoposSEXP, SEXP atpressSEXP, SEXP attempSEXP, SEXP horhgtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tjd_ut(tjd_utSEXP);
    Rcpp::traits::input_parameter< int >::type ipl(iplSEXP);
    Rcpp::traits::input_parameter< std::string >::type starname(starnameSEXP);
    Rcpp::traits::input_parameter< int >::type epheflag(epheflagSEXP);
    Rcpp::traits::input_parameter< int >::type rsmi(rsmiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type geopos(geoposSEXP);
    Rcpp::traits::input_parameter< double >::type atpress(atpressSEXP);
    Rcpp::traits::input_parameter< double >::type attemp(attempSEXP);
    Rcpp::traits::input_parameter< double >::type horhgt(horhgtSEXP);
    rcpp_result_gen = Rcpp::wrap(rise_trans_true_hor(tjd_ut, ipl, starname, epheflag, rsmi, geopos, atpress, attemp, horhgt));
    return rcpp_result_gen;
END_RCPP
}
// close
void close();
RcppExport SEXP _swephR_close() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    close();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_swephR_day_of_week", (DL_FUNC) &_swephR_day_of_week, 1},
    {"_swephR_get_tid_acc", (DL_FUNC) &_swephR_get_tid_acc, 0},
    {"_swephR_version", (DL_FUNC) &_swephR_version, 0},
    {"_swephR_set_tid_acc", (DL_FUNC) &_swephR_set_tid_acc, 1},
    {"_swephR_deltat", (DL_FUNC) &_swephR_deltat, 1},
    {"_swephR_set_ephe_path", (DL_FUNC) &_swephR_set_ephe_path, 1},
    {"_swephR_set_topo", (DL_FUNC) &_swephR_set_topo, 3},
    {"_swephR_set_delta_t_userdef", (DL_FUNC) &_swephR_set_delta_t_userdef, 1},
    {"_swephR_calc", (DL_FUNC) &_swephR_calc, 3},
    {"_swephR_fixstar", (DL_FUNC) &_swephR_fixstar, 3},
    {"_swephR_deltat_ex", (DL_FUNC) &_swephR_deltat_ex, 2},
    {"_swephR_azalt", (DL_FUNC) &_swephR_azalt, 6},
    {"_swephR_rise_trans_true_hor", (DL_FUNC) &_swephR_rise_trans_true_hor, 9},
    {"_swephR_close", (DL_FUNC) &_swephR_close, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_swephR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
