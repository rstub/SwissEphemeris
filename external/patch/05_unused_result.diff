--- external/src/swejpl.c	2017-12-08 09:26:03.000000000 +0100
+++ src/libswe/swejpl.c	2018-08-17 22:12:05.745118037 +0200
@@ -191,6 +191,7 @@
   int i, kmx, khi, nd;
   int32 ksize, lpt[3];
   char ttl[6*14*3];	
+  size_t nrd; /* unused, removes compile warnings */
   if ((js->jplfptr = swi_fopen(SEI_FILE_PLANET, js->jplfname, js->jplfpath, serr)) == NULL) {
     return NOT_AVAILABLE;
   }
@@ -198,13 +199,13 @@
    * "JPL Planetary Ephemeris DE404/LE404
    *  Start Epoch: JED=   625296.5-3001 DEC 21 00:00:00
    *  Final Epoch: JED=  2817168.5 3001 JAN 17 00:00:00c */
-  fread((void *) &ttl[0], 1, 252, js->jplfptr);
+  nrd = fread((void *) &ttl[0], 1, 252, js->jplfptr);
   /* cnam = names of constants */
-  fread((void *) js->ch_cnam, 1, 6*400, js->jplfptr);
+  nrd = fread((void *) js->ch_cnam, 1, 6*400, js->jplfptr);
   /* ss[0] = start epoch of ephemeris
    * ss[1] = end epoch
    * ss[2] = segment size in days */
-  fread((void *) &ss[0], sizeof(double), 3, js->jplfptr);
+  nrd = fread((void *) &ss[0], sizeof(double), 3, js->jplfptr);
   /* reorder ? */
   if (ss[2] < 1 || ss[2] > 200) 
     js->do_reorder = TRUE;
@@ -226,29 +227,29 @@
     return(NOT_AVAILABLE);
   }
   /* ncon = number of constants */
-  fread((void *) &ncon, sizeof(int32), 1, js->jplfptr);
+  nrd = fread((void *) &ncon, sizeof(int32), 1, js->jplfptr);
   if (js->do_reorder)
     reorder((char *) &ncon, sizeof(int32), 1);
   /* au = astronomical unit */
-  fread((void *) &au, sizeof(double), 1, js->jplfptr);
+  nrd = fread((void *) &au, sizeof(double), 1, js->jplfptr);
   if (js->do_reorder)
     reorder((char *) &au, sizeof(double), 1);
   /* emrat = earth moon mass ratio */
-  fread((void *) &emrat, sizeof(double), 1, js->jplfptr);
+  nrd = fread((void *) &emrat, sizeof(double), 1, js->jplfptr);
   if (js->do_reorder)
     reorder((char *) &emrat, sizeof(double), 1);
   /* ipt[i+0]: coefficients of planet i start at buf[ipt[i+0]-1] 
    * ipt[i+1]: number of coefficients (interpolation order - 1)
    * ipt[i+2]: number of intervals in segment */
-  fread((void *) &js->eh_ipt[0], sizeof(int32), 36, js->jplfptr);
+  nrd = fread((void *) &js->eh_ipt[0], sizeof(int32), 36, js->jplfptr);
   if (js->do_reorder)
     reorder((char *) &js->eh_ipt[0], sizeof(int32), 36);
   /* numde = number of jpl ephemeris "404" with de404 */
-  fread((void *) &numde, sizeof(int32), 1, js->jplfptr);
+  nrd = fread((void *) &numde, sizeof(int32), 1, js->jplfptr);
   if (js->do_reorder)
     reorder((char *) &numde, sizeof(int32), 1);
   /* read librations */
-  fread(&lpt[0], sizeof(int32), 3, js->jplfptr);
+  nrd = fread(&lpt[0], sizeof(int32), 3, js->jplfptr);
   if (js->do_reorder)
     reorder((char *) &lpt[0], sizeof(int32), 3);
   /* fill librations into eh_ipt[36]..[38] */
@@ -649,6 +650,7 @@
   char ch_ttl[252];
   static TLS int32 irecsz;
   static TLS int32 nrl, lpt[3], ncoeffs;
+  size_t nrd; /* unused, removes compile warnings */
   if (js->jplfptr == NULL) {
     ksize = fsizer(serr); /* the number of single precision words in a record */
     nrecl = 4;
@@ -660,43 +662,43 @@
      * "JPL Planetary Ephemeris DE404/LE404
      *  Start Epoch: JED=   625296.5-3001 DEC 21 00:00:00
      *  Final Epoch: JED=  2817168.5 3001 JAN 17 00:00:00c */
-    fread((void *) ch_ttl, 1, 252, js->jplfptr);
+    nrd = fread((void *) ch_ttl, 1, 252, js->jplfptr);
     /* cnam = names of constants */
-    fread((void *) js->ch_cnam, 1, 2400, js->jplfptr);
+    nrd = fread((void *) js->ch_cnam, 1, 2400, js->jplfptr);
     /* ss[0] = start epoch of ephemeris
      * ss[1] = end epoch
      * ss[2] = segment size in days */
-    fread((void *) &js->eh_ss[0], sizeof(double), 3, js->jplfptr);
+    nrd = fread((void *) &js->eh_ss[0], sizeof(double), 3, js->jplfptr);
     if (js->do_reorder)
       reorder((char *) &js->eh_ss[0], sizeof(double), 3);
     /* ncon = number of constants */
-    fread((void *) &js->eh_ncon, sizeof(int32), 1, js->jplfptr);
+    nrd = fread((void *) &js->eh_ncon, sizeof(int32), 1, js->jplfptr);
     if (js->do_reorder)
       reorder((char *) &js->eh_ncon, sizeof(int32), 1);
     /* au = astronomical unit */
-    fread((void *) &js->eh_au, sizeof(double), 1, js->jplfptr);
+    nrd = fread((void *) &js->eh_au, sizeof(double), 1, js->jplfptr);
     if (js->do_reorder)
       reorder((char *) &js->eh_au, sizeof(double), 1);
     /* emrat = earth moon mass ratio */
-    fread((void *) &js->eh_emrat, sizeof(double), 1, js->jplfptr);
+    nrd = fread((void *) &js->eh_emrat, sizeof(double), 1, js->jplfptr);
     if (js->do_reorder)
       reorder((char *) &js->eh_emrat, sizeof(double), 1);
     /* ipt[i+0]: coefficients of planet i start at buf[ipt[i+0]-1] 
      * ipt[i+1]: number of coefficients (interpolation order - 1)
      * ipt[i+2]: number of intervals in segment */
-    fread((void *) &ipt[0], sizeof(int32), 36, js->jplfptr);
+    nrd = fread((void *) &ipt[0], sizeof(int32), 36, js->jplfptr);
     if (js->do_reorder)
       reorder((char *) &ipt[0], sizeof(int32), 36);
     /* numde = number of jpl ephemeris "404" with de404 */
-    fread((void *) &js->eh_denum, sizeof(int32), 1, js->jplfptr);
+    nrd = fread((void *) &js->eh_denum, sizeof(int32), 1, js->jplfptr);
     if (js->do_reorder)
       reorder((char *) &js->eh_denum, sizeof(int32), 1);
-    fread((void *) &lpt[0], sizeof(int32), 3, js->jplfptr);
+    nrd = fread((void *) &lpt[0], sizeof(int32), 3, js->jplfptr);
     if (js->do_reorder)
       reorder((char *) &lpt[0], sizeof(int32), 3);
     /* cval[]:  other constants in next record */
     FSEEK(js->jplfptr, (off_t64) (1L * irecsz), 0);
-    fread((void *) &js->eh_cval[0], sizeof(double), 400, js->jplfptr);
+    nrd = fread((void *) &js->eh_cval[0], sizeof(double), 400, js->jplfptr);
     if (js->do_reorder)
       reorder((char *) &js->eh_cval[0], sizeof(double), 400);
     /* new 26-aug-2008: verify correct block size */
@@ -737,11 +739,11 @@
     /* check if start and end dates in segments are the same as in 
      * file header */
     FSEEK(js->jplfptr, (off_t64) (2L * irecsz), 0);
-    fread((void *) &ts[0], sizeof(double), 2, js->jplfptr);
+    nrd = fread((void *) &ts[0], sizeof(double), 2, js->jplfptr);
     if (js->do_reorder)
       reorder((char *) &ts[0], sizeof(double), 2);
     FSEEK(js->jplfptr, (off_t64) ((nseg + 2 - 1) * ((off_t64) irecsz)), 0);
-    fread((void *) &ts[2], sizeof(double), 2, js->jplfptr);
+    nrd = fread((void *) &ts[2], sizeof(double), 2, js->jplfptr);
     if (js->do_reorder)
       reorder((char *) &ts[2], sizeof(double), 2);
     if (ts[0] != js->eh_ss[0] || ts[3] != js->eh_ss[1]) {
